var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = WidebandDoA","category":"page"},{"location":"#WidebandDoA","page":"Home","title":"WidebandDoA","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for WidebandDoA.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [WidebandDoA]","category":"page"},{"location":"#WidebandDoA.UniformNormalLocalProposal","page":"Home","title":"WidebandDoA.UniformNormalLocalProposal","text":"UniformNormalLocalProposal(mu, sigma)\n\nUniform proposal over the DoAs and a log-normal propsal over the SNR parameters of a source.\n\nArguments\n\nmu: Mean of the log-normal proposal on the SNR parameter.\nsigma: Standard deviation of the log-normal proposal on the SNR parameter.\n\nThis corresponds to the following proposal:\n\nbeginaligned\n    phi_j sim qleft(phiright) = mathsfUniformleft(-fracpi2 fracpi2right) \n    gamma_j sim qleft(gammaright) = textsfLog-Normalleft(textttmu textttsigmaright)\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"#WidebandDoA.WidebandConditioned","page":"Home","title":"WidebandDoA.WidebandConditioned","text":"WidebandConditioned(model, y)\n\nmodel conditioned on y.\n\nArguments\n\nmodel::AbstractWidebandModel: Signal model.\ny::AbstractMatrix: Received data, where the rows are the channels (sersors), while the columns are the signals.\n\n\n\n\n\n","category":"type"},{"location":"#WidebandDoA.WidebandData","page":"Home","title":"WidebandDoA.WidebandData","text":"WidebandData(y, y_fft, y_power)\n\nReceived signal with pre-processing.\n\nArguments\n\ny: Received signal, where the rows are the channels (sersors), while the columns are the signals.\ny_fft: Received signal after applying a channel-wise FFT.\ny_power: Power of the received signal.\n\n\n\n\n\n","category":"type"},{"location":"#WidebandDoA.WidebandIsoIsoLikelihood","page":"Home","title":"WidebandDoA.WidebandIsoIsoLikelihood","text":"WidebandIsoIsoLikelihood(n_samples, n_fft, delay_filter, Δx, c, fs)\n\nCollapsed likelihood for a isotropic normal source prior and an isotropic normal noise prior.\n\nArguments\n\nn_samples::Int: Number of samples in received signal.\nn_fft::Int: Length of the latent source signal.\ndelay_filter::AbstractDelayFilter: Delay filter.\nΔx::AbstractVector: Inter-sensor delay in seconds.\nc::Real: Propagation speed of the medium in m/s.\nfs::Real: Sampling rate in Hz.\n\nGiven a parameter NamedTuple(phi[j], loglambda[j]), this likelihood computes:\n\nbeginaligned\n    log pleft(y mid phi_1k gamma_1k alpha beta right) \n    = -fracN + beta2 logleft(fracalpha2 + y^dagger (H Lambda H^dagger + mathrmI)^-1 y right)\n       - frac12 det left(H^dagger Lambda H + mathrmIright)  \n    = -fracN + beta2 logleft(fracalpha2\n       + y^dagger y - y^dagger H left( Lambda^-1 + H^dagger H right)^-1 H^dagger y right)\n       - frac12 detleft(Lambdaright) det left(Lambda^-1 + H^dagger H right) \nendaligned\n\nwhere\n\nLambda = mathrmdiagleft(\n    expleft( texttextsfloglambda0 right)\n    ldots\n    expleft( texttextsfloglambdak right)\n right)\n\n(Note that gamma_j in the paper is lambda[j] in the code, which is a bit confusing.)\n\n\n\n\n\n","category":"type"},{"location":"#WidebandDoA.WidebandIsoIsoModel","page":"Home","title":"WidebandDoA.WidebandIsoIsoModel","text":"WidebandIsoIsoModel(n_samples, Δx, c, fs, source_prior, α, β, order_prior, n_fft)\n\nModel for wideband signal model with isotropic normal source prior and isotropic normal noise prior.\n\nArguments\n\nn_samples::Int: Number of samples of the received signal.\nΔx::AbstractVector: Inter-sensor delay of the array in seconds.\nc::Real: Propagation speed of the medium in m/s.\nfs::Real: Sampling frequency in Hz.\nsource_prior::UnivariateDistribution: Prior on the SNR parameter (gamma_j in the paper) of the sources.\nα::Real: alpha hyperparameter of the inerse-gamma prior on the signal standard deviation (sigma in the paper; default: 0)\nβ::Real beta hyperparameter of the inerse-gamma prior on the signal standard deviation (sigma in the paper; default: 0)\norder_prior::DiscreteDistribution: Prior on the model order (k in the paper; default: NegativeBinomial(1/2 + 0.1, 0.1/(0.1 + 1)))\nn_fft::Int: Length of the source signals. (default: n_samples*2)\n\n\n\n\n\n","category":"type"},{"location":"#WidebandDoA.WidebandIsoIsoParam","page":"Home","title":"WidebandDoA.WidebandIsoIsoParam","text":"WidebandIsoIsoParam(phi, loglambda)\n\nLocal parameter of WidebandIsoIsoModel.\n\n\n\n\n\n","category":"type"},{"location":"#WidebandDoA.WidebandIsoSourcePrior","page":"Home","title":"WidebandDoA.WidebandIsoSourcePrior","text":"WidebandIsoSourcePrior(n_samples, n_fft, alpha, beta, order_prior, source_prior)\n\nPrior for wideband signal model, where a Gaussian prior with an isotropic covariance structure is assigned on the latent source signals.\n\nArguments\n\nsamples::Int: Number of samples in the received signal.\nn_fft::Int: Length of the latent signal (N^prime in the paper).\nalpha::Real: alpha hyperparameter for the inverse-gamma prior on the signal variance.\nbeta::Real: beta hyperparameter for the inverse-gamma prior on the signal variance.\norder_prior::DiscreteDistribution: Prior on the number of sources. (Prior on k in the paper.)\nsource_prior::UnivariateDistribution: Hyperprior on the SNR hyperparameter of the sources. (Prior on gamma in the paper.)\n\n\n\n\n\n","category":"type"},{"location":"#WidebandDoA.WindowedSinc","page":"Home","title":"WidebandDoA.WindowedSinc","text":"WindowedSinc(n_fft) <: AbstractDelayFilter\n\nClosed-form fractional delay filter by Pei and Lai[PL2012][PL2014]\n\nArguments\n\nn_fft::Int: Number of taps of the filter.\n\n[PL2012]: S. -C. Pei and Y. -C. Lai, \"Closed Form Variable Fractional Time Delay Using FFT,\" IEEE Signal Processing Letters, 2012.\n\n[PL2014]: S. -C. Pei and Y. -C. Lai, \"Closed form variable fractional delay using FFT with transition band trade-off,\" In Proceedings of the IEEE International Symposium on Circuits and Systems (ISCAS), 2014.\n\n\n\n\n\n","category":"type"},{"location":"#Base.rand-Tuple{Random.AbstractRNG, WidebandDoA.AbstractWidebandModel}","page":"Home","title":"Base.rand","text":"rand(rng, model)\n\nSample from a wideband signal model.\n\nArguments\n\nrng::Random.AbstractRNG\nmodel: Wideband signal model.\n\nReturns\n\nparams: NamedTuple containing the model parameters.\ndata: Simulated received data.\n\n\n\n\n\n","category":"method"},{"location":"#Base.rand-Tuple{Random.AbstractRNG, WidebandIsoIsoLikelihood, AbstractMatrix, AbstractVector}","page":"Home","title":"Base.rand","text":"rand(rng, likelihood::WidebandIsoIsoLikelihood, x, phi; prior, sigma)\n\nSample from the collapsed likelihood for the model with isotropic normal prior and isotropic normal noise.\n\nArguments\n\nrng::Random.AbstractRNG: Random number generator.\nlikelihood::WidebandIsoIsoLikelihood: Likelihood.\nx::AbstractMatrix: Latent source signals, where rows are the signals and columns are sources.\nphi::AbstractVector: Direction-of-arrivals. \n\nKeyword Arguments\n\nprior: Prior object used to sample sigma if needed (default: nothing).\nsigma: Signal standard deviation. (Default samples from InverseGamma(prior.alpha, prior.beta))\n\nReturns\n\ny: A simulated received signal, where the rows are the channels (sensors) and the columns are received signals.\n\nThe sampling process is as follows:\n\nbeginaligned\n    epsilon sim mathcalN(0 sigma^2 mathrmI) \n    x         sim mathcalN(0 sigma^2 H Lambda H^top) \n    y         = x + epsilon  \nendaligned\n\nand the noise epsilon,\n\nbeginaligned\n    y         sim mathcalN(0 sigma^2 left( H Lambda H^top + mathrmI right))\nendaligned\n\nSampling from this distribution is as simple as\n\nbeginaligned\n  y = sigma H Lambda^12 z_x + sigma z_epsilon\nendaligned\n\nwhere z_x and z_epsilon are independent standard Gaussian vectors.\n\n\n\n\n\n","category":"method"},{"location":"#Base.rand-Tuple{Random.AbstractRNG, WidebandIsoSourcePrior}","page":"Home","title":"Base.rand","text":"rand(rng, prior::WidebandIsoSourcePrior, )\n\nSample from prior with isotropic source covariance prior.\n\nArguments\n\nrng::Random.AbstractRNG: Random number generator.\nprior::WidebandIsoSourcePrior: Prior.\n\nKeyword Arguments\n\nk: Model order. (Default samples from prior.model_order.)\nsigma: Signal standard deviation. (Default samples from InverseGamma(prior.alpha, prior.beta).)\nphi: DoA of each sources. (Length must match k; default samples from the uniform distribution over the interval -pi2  pi2.)\nlambda: SNR parameter for each source. (Length must match k; default samples from prior.source_prior.)\n\nThe sampling process is:\n\nbeginaligned\n    k sim textttpriormodel_order \n    sigma sim texttextsfInv-Gamma(textttprioralpha texttextttpriorbeta) \n    phi_j mid k sim texttextsfUniformleft(-fracpi2 fracpi2right) \n    lambda_j mid k sim textttpriorsource_prior \n    x_j mid k sigma lambda_j sim mathcalNleft(0 sigma lambda_j mathrmI right)\nendaligned\n\nReturns\n\nparams: Parameter of wideband signal model. (keys: k, phi, lambda, sigma, x)\n\n\n\n\n\n","category":"method"},{"location":"#WidebandDoA.array_delay","page":"Home","title":"WidebandDoA.array_delay","text":"array_delay(filter, Δn)\n\nReturns the fourier domain fractional delay filters as a matrix H in mathbbR^ N times M times K . The fractional delay filters are the ones in:\n\n\n\n\n\n","category":"function"},{"location":"#WidebandDoA.inter_sensor_delay-Tuple{AbstractVector, AbstractVector, Any}","page":"Home","title":"WidebandDoA.inter_sensor_delay","text":"inter_sensor_delay(ϕ, Δx, c)\n\nCompute the inter-sensor delay matrix D in mathbbR^M times K in seconds for a linear array, where M = length(isd) is the number of sensors on the array, and K = length(isd) is the number of targets. The matrix is computed as follows:\n\nD_mk = fracDelta xm  sin(phik)c\n\nArguments\n\nϕ::AbstractVector: Vector of DoAs in radian. \nΔx::AbstractVector: Vector of inter-sensor delay of the array.\nc: Propagation speed of the medium.\n\nReturns\n\ndelays: Matrix containing the delays in seconds. Each row correspond to sensor, and each column correspond to the source.\n\n\n\n\n\n","category":"method"},{"location":"#WidebandDoA.loglikelihood","page":"Home","title":"WidebandDoA.loglikelihood","text":"loglikelihood(likelihood, params)\n\nLog likelihood of likelihood evaluated on params.\n\n\n\n\n\n","category":"function"},{"location":"#WidebandDoA.logpriordensity","page":"Home","title":"WidebandDoA.logpriordensity","text":"logpriordensity(prior, params)\n\nLog density of prior evaluated on params.\n\n\n\n\n\n","category":"function"},{"location":"#WidebandDoA.reconstruct-Tuple{WidebandConditioned, Any}","page":"Home","title":"WidebandDoA.reconstruct","text":"reconstruct(cond::WidebandConditioned, params)\n\nConditional posterior of the latent source signals for reconstruction given conditioned model cond and params\n\nArguments\n\ncond::WidebandConditioned: Conditioned model.\nparams: Additional parameters we need to condition on.\n\nReturns\n\ncond_post: Conditional posterior for the latent source signals.\n\n\n\n\n\n","category":"method"},{"location":"#WidebandDoA.relabel-Union{Tuple{T}, Tuple{Random.AbstractRNG, AbstractVector{<:AbstractVector{T}}, Int64}} where T<:Real","page":"Home","title":"WidebandDoA.relabel","text":"relabel(rng, samples, n_mixture; n_iter, n_imh_iter, show_progress)\n\nRelabel the RJMCMC samples samples into n_mixture Gaussian mixtures according to the stochastic expectation maximization (SEM) procedure of Roodaki et al. 2014[RBF2014]. \n\nArguments\n\nrng::Random.AbstractRNG\nsamples::AbstractVector{<:AbstractVector{<:Real}}: Samples subject to relabeling.\nn_mixture::Int: Number of component in the Gaussian mixture. Roodaki et al. recommend setting this as the 80% or 90% percentile of model order posterior.\n\nKeyword Arguments\n\nn_iter::Int: Number of SEM iterations (default: 16).\nn_mh_iter::Int: Number of Metropolis-Hastings steps for sampling an a label assignment (default: 32).\nshow_progress::Bool: Whether to enable progresss line (default: true).\n\nReturns\n\nmixture::Distributions.MixtureModel: The Gaussian mixture model fit over samples.\nlabels::Vector{Vector{Int}}: Labels assigned to each element of each RJCMCM sample.\n\nThe length of each RJCMCMC sample in samples is the model order of that specific sample. Each element of an RJCMCM sample should be the variables that determine which label this element should be associated with.\n\n[RBF2014]: Roodaki, Alireza, Julien Bect, and Gilles Fleury. \"Relabeling and summarizing posterior distributions in signal decomposition problems when the number of components is unknown.\" IEEE Transactions on Signal Processing (2014).\n\n\n\n\n\n","category":"method"},{"location":"baseline/#Validation-of-Baseline","page":"Baseline","title":"Validation of Baseline","text":"","category":"section"},{"location":"baseline/","page":"Baseline","title":"Baseline","text":"To validate that we correctly implemented our baseline, which is GLRT, we reproduce one of the plots in the original paper.","category":"page"},{"location":"demonstration/#Demonstration","page":"Demonstration","title":"Demonstration","text":"","category":"section"}]
}
